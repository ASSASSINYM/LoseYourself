branch_data
head(fatal2015)
levels(fatal2015$VICTIm)
levels(fatal2015$VICTIM)
levels(fatal2016$VICTIm)
levels(fatal2016$VICTIM)
levels(fatal2017$VICTIM)
levels(fatal2018$VICTIM)
fatal2015[fatal2015$VICTIM==""]
fatal2015[fatal2015$VICTIM==""|is.na(fatal2015$VICTIM)]
fatal2015[fatal2015$VICTIM=="CRV"]
fatal2015[fatal2015$VICTIM=="DRV"]
head(fatal2015)
fatal2015[fatal2015$VICTIM==""|is.na(fatal2015$VICTIM),]
fatal2015[1398,]
fatal2015[1399,]
fatal2015[2098,]
fatal2015[2089,]
head(fatal2015, n=30)
levels(fatal2015$VICTIM)
fatal2015[2089,]
fatal2015[1399,]
rm(list=ls());
gc()
levels(fatal2015$VICTIM)
fatal2015[fatal2015$VICTIM==""|is.na(fatal2015$VICTIM),]
fatal2015[fatal2015$VICTIM=="DRV ",]
levels(fatal2015$VICTIM)
fatal2015 <- droplevels(fatal2015)
levels(fatal2015$VICTIM)
fatal2015[fatal2015$VICTIM=="UNKNOWN",]
levels(fatal2016$VICTIM)
fatal2016[fatal2016$VICTIM=="PIL ",]
levels(fatal2016$VICTIM)
levels(fatal2015$VICTIM)
levels(fatal2017$VICTIM)
levels(fatal2017$VICTIM)
levels(fatal2017$VICTIM)
fatal2016[fatal2016$VICTIM=="0",]
fatal2017[fatal2017$VICTIM=="0",]
fatal2017[(fatal2017$VICTIM=="PIL "),]
levels(fatal2017$VICTIM)
fatal2017[(fatal2017$VICTIM=="PIL "),]
fatal2017[(fatal2017$VICTIM=="M/CY"),]
fatal2017[(fatal2017$VICTIM=="PL"),]
fatal2017[(fatal2017$VICTIM=="PIL  "),]
levels(fatal2017$VICTIM)
levels(fatal2018$VICTIM)
fatal2018[(fatal2018$VICTIM==""),]
fatal2018[1421,]
fatal2018[1420,]
fatal2018[0:1420,]
tail(fatal2018)
levels(fatal2018$VICTIM)
fatal2018[(fatal2018$VICTIM=="0"),]
levels(fatal2018$VICTIM)
tail(fatal2016)
levels(fatal2018$DAY)
tail(fatal2015)
levels(fatal2015$DAY)
levels(fatal2015$DATE)
str(fatal2015)
str(fatal2016)
newFrame <- merge(fatal2015, fatal2016)
head(newFrame)
head(newFrame, n=20)
newFrame
merge(fatal2015, fatal2016)
str(fatal2016)
length(fatal2015)
fatal2015
dim(fatal2015)
dim(fatal2016)
newFrame <- c(fatal2015, fatal2016)
dim(newFrame)
newFrame
newFrame <- rbind(fatal2015, fatal2016)
dim(newFrame)
dim(fatal2016)
dim(fatal2015)
newFrame <- rbind(fatal2015, fatal2016, fatal2017)
dim(fatal2017)
dim(newFrame)
levels(newFrame$VICTIM)
levels(newFrame$DATE)
levels(fatal2016$DATE)
newFrame <- rbind(fatal2015, fatal2016, fatal2017, fatal2018)
dim(newFrame)
dim(fatal2018)
newFrame[order(as.Date(newFrame$DATE, format="%m/%d/%Y")),]
head(fatalities, n=20)
head(ordered_fatalities, n=20)
levels(fatalities$VICTIM)
fatalities[fatalities$VICTIM=="0"]
fatalities[fatalities$VICTIM=="0",]
fatalities[fatalities$VICTIM=="UNKNOWN",]
fatalities[fatalities$VICTIM=="0" | fatalities$VICTIM=="UNKNOWN",]
motorcylcefatalities <- fatalities[fatalities$VICTIM=="0" | fatalities$VICTIM=="UNKNOWN",]
motorcylcefatalities <- fatalities[fatalities$VICTIM=="MCY" | fatalities$VICTIM=="PIL",]
dim(motorcylcefatalities)
head(motorcylcefatalities, n=20)
levels(fatalities$GENDER)
ls()
x[grepl("S(at|un)", weekdays("2014-10-11"))]
library(lubridate)
wday("2014-10-11", label = TRUE)
levels(fatalities$DATE)
wday("8/17/2018", label = TRUE)
wday(as.DATE("8/17/2018", format="%m/%d/%Y"), label=True)
date <- as.DATE("8/17/2018", format="%m/%d/%Y")
wday(mdy("8/17/2018"), label = TRUE)
head(motorcylcefatalities, n=20)
levels(motorcylcefatalities$DAY)
motorcylcefatalities[motorcylcefatalities$DATE == "",]
motorcylcefatalities[motorcylcefatalities$DAY == "",]
head(motorcylcefatalities, n=20)
levels(motorcylcefatalities$DAY)
levels(motorcylcefatalities$COUNTY)
arrange(levels(motorcylcefatalities$COUNTY))
require('dplyr')
arrange(levels(motorcylcefatalities$COUNTY))
arrange(desc(levels(motorcylcefatalities$COUNTY)))
order(levels(motorcylcefatalities$COUNTY))
motorcylcefatalities[order(levels(motorcylcefatalities$COUNTY)),]
levels(motorcylcefatalities$COUNTY)
head(cycleData)
levels(cycleData$DATE)
levels(cycleData$DAY)
levels(cycleData$COUNTY)
levels(cycleData$VICTIM)
levels(cycleData$FATALITIES)
levels(cycleData$YEAR.QUARTER)
warnings()
lelvels(motorcylcefatalities$COUNTY)
levels(motorcylcefatalities$COUNTY)
lelvels(motorcylcefatalities$COUNTY)
levels(motorcylcefatalities$COUNTY)
levels(motorcylcefatalities$COUNTY)
head(motorcylcefatalities)
levels(motorcylcefatalities$BASE.SUB.BASE)
head(motorcylcefatalities)
levels(motorcylcefatalities$BASE.SUB.BASE)
levels(fatal2018$VICTIM)
levels(motorcylcefatalities$COUNTY)
head(motorcylcefatalities)
head(motorcylcefatalities)
levels(motorcylcefatalities$COUNTY)
as.Date(motorcylcefatalities$DAY)
day <- '01/01/2015'
wday(mdy(day))
wday(mdy(day), label=TRUE)
as.Date(motorcylcefatalities$DAY)
head(motorcylcefatalities)
levels(motorcylcefatalities$DAY)
motorcylcefatalities$VICTIM <- as.data.frame(lapply(motorcylcefatalities$VICTIM, addLevel(newlevel="DRV")))
motorcylcefatalities$VICTIM <- as.data.frame(lapply(motorcylcefatalities$VICTIM, addLevel))
motorcylcefatalities$VICTIM <- as.data.frame(lapply(motorcylcefatalities$VICTIM, addLevel))
levels(motorcylcefatalities$VICTIM)
motorcylcefatalities$VICTIM <- factor(motorcylcefatalities$VICTIM, levels=c(levels(motorcylcefatalities$VICTIM), "DRV"))
levels(motorcylcefatalities$VICTIM)
levels(motorcylcefatalities$VICTIM)
levels(motorcylcefatalities$VICTIM)
rm(list=ls())
gc()
source("partials/utils.R")
levels(motorcylcefatalities$VICTIM)
levels(motorcylcefatalities$VICTIM)
levels(motorcylcefatalities$VICTIM)
levels(motorcylcefatalities$COUNTY)
levels(motorcylcefatalities$BASE.SUB.BASE)
levels(motorcylcefatalities$BASE.SUB.BASE)
levels(motorcylcefatalities$BASE.SUB.BASE)
levels(motorcylcefatalities$BASE.SUB.BASE)
head(motorcylcefatalities)
levels(motorcylcefatalities$ROAD)
head(cleanedMotorcycleData)
head(cleanedMotorCycleData)
head(motorcylcefatalities)
table(cleanedMotorCycleData$VICTIM, cleanedMotorCycleData$FATALITIES)
table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM)
sum(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM))
 able(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM))
colSums(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM)
table(colSums(cleanedMotorCycleData$FATALITIES), cleanedMotorCycleData$VICTIM)
colSums(cleanedMotorCycleData$FATALITIES)
colSums(cleanedMotorCycleData$VICTIM)
table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM)
rowSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM))
colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$VICTIM))
table(cleanedMotorCycleData$VICTIM, cleanedMotorCycleData$FATALITIES)
levels(cleanedMotorCycleData$FATALITIES)
day <- "01/01/2015"
year(mdy(day))
head(cleanedMotorCycleData)
head(cleanedMotorCycleData)
table(cleanedMotorCycleData$YEAR, cleanedMotorCycleData$FATALITIES)
levels(cleanedMotorCycleData$FATALITIES)
levels(motorcylcefatalities$FATALITIES)
motorcylcefatalities[(motorcylcefatalities$FATALITIES==""),]
levels(motorcylcefatalities$FATALITIES)
levels(cleanedMotorCycleData$FATALITIES)
table(cleanedMotorCycleData$YEAR, cleanedMotorCycleData$FATALITIES)
table(cleanedMotorCycleData$YEAR.QUARTER, cleanedMotorCycleData$FATALITIES)
quarterCount
?png
?png
table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$DAY)
table(cleanedMotorCycleData[cleanedMotorCycleData$YEAR=="2015",]$FATALITIES, cleanedMotorCycleDatacleanedMotorCycleData$YEAR=="2015",]$DAY)
cleanedMotorCycleData[cleanedMotorCycleData$YEAR=="2015",]$FATALITIES
table(cleanedMotorCycleData[cleanedMotorCycleData$YEAR=="2015",]$FATALITIES, cleanedMotorCycleData[cleanedMotorCycleData$YEAR=="2015",]$DAY)
DayCount
table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$COUNTY)
stationDeaths <- table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE)
stationDeaths
topStations
orderedStations
stationDeaths[topStations,]
stationDeaths[210,]
stationDeaths
table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE)
colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
sumPost <- colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
sumOrdPost <- sumPost[order(sumPost, decreasing=TRUE),]
sumOrdPost <- sumPost[order(sumPost, decreasing=TRUE)]
head(sumOrdPost)
sumPost <- colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE)
rowSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
rowSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
rownames(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
rowvalues(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
rowValues(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
mydf <- data.frame(`2.72`=runif(20, 0, 125),
`3.2`=runif(20, 50, 75),
`3.78`=runif(20, 0, 100),
yy= head(letters,2), check.names=FALSE)
mydf
sapply(1:length(mydf), function(i) mydf[[i]]* as.numeric(names(mydf) 
[i])  )
as.matrix(mydf[,1:3]) %*%  diag(as.numeric(names(mydf)[1:3]))
scale(mydf[,1:3],1/as.numeric(names(mydf)[1:3]))
mydf.vd <- as.data.frame(sapply(1:length(mydf), function(i)
mydf[[i]]*as.numeric(names(mydf)[i]) ))
mydf
colnames(mydf.vd) <- paste("vd",names(mydf), sep="")
out <- cbind(mydf,mydf.vd)
mydf
mydf.vd
head(yearlyCount)
sumCount <- as.data.frame(sapply(1:length(yearlyCount), function(i)
yearlyCount[[i]]*as.numeric(names(yearlyCount)[i]) ))
sumCount
names(yearlyCount)
names(yearlyCount)[0]
colnames(yearlyCount)[0]
colnames(yearlyCount)
sumCount <- as.data.frame(sapply(1:length(yearlyCount), function(i)
yearlyCount[[i]]*as.numeric(colnames(yearlyCount)[i]) ))
sumCount
yearlyCount[[0]]
yearlyCount[0]
head(yearlyCount)
yearlyCount[0,]
yearlyCount[,2015]
yearFrame <- as.data.frame(yearlyCount)
yearFrame
yearFrame$TOTAL <- with(yearFrame, Var2 * Freq)
yearFrame
yearFrame$TOTAL <- with(yearFrame, as.integer(Var2) * as.integer(Freq))
yearFrame
levels(yearFrame$Var1)
aggregate(TOTAL ~ Var1, data=yearFrame, FUN=sum)
569 + 42 + 18 + 0
yearlyCount
yearlyCount[1]
yearly[5] = 1
yearlyCount[5] = 1
yearlyCount
aggregate(TOTAL ~ Var1, data=yearFrame, FUN=sum)$TOTAL
sums <- aggregate(TOTAL ~ Var1, data=yearFrame, FUN=sum)$TOTAL
yearlyCount[5] <- sum
yearlyCount[5] <- sums
f <- gl(4, 4, labels = letters[1:4])
f
x <- table(f)
x
paste(names(x), paste0("(", x, ")") )
?paste
?table
sums
sums <- aggregate(TOTAL ~ Var1, data=yearFrame, FUN=sum)
sums
as.table(sums)
table(sums$Var1, sums$TOTAL)
table(sums)
sums
barplot(sums)
hist
hist(sums)
sums
table(sums$Var1)
table(sums$Var1)[0]
free <- table(sums$Var1)
free[0]
free
sums
t(sums)
table(t(sums))
table(t(fw)[,1], t(fw)[,2])
table(t(sums)[,1], t(sums)[,2])
table(t(sums)[,1])
yearlyCount
yearlyCount
yearFrame
yearFrame
uniqueTotals
stationDeaths <- table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE)
stationDeas
stationDeaths
colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
colSUm <- colSums(table(cleanedMotorCycleData$FATALITIES, cleanedMotorCycleData$BASE.SUB.BASE))
ordx1 = order(colSUm,decreasing=T);
ordx1
stationDeaths[ordx1]
stationDeaths[ordx1,]
stationDeaths <- stationDeaths[ordx1,]
stationDeaths
colSUm
colSUm <- colSUm[order(colSUm)]
colSUm <- colSUm[order(colSUm, decreasing=TRUE),]
colSUm <- colSUm[order(colSUm, decreasing=TRUE)]
colSUm
stationDeaths <- stationDeaths[order(colSUm, decreasing=TRUE)]
stationDeaths
order(colSUm, decreasing=TRUE)
colSUm
head(Top50Stations)
orderedStations[,(ncol(orderedStations)-n-1):ncol(orderedStations)]
orderedStations[,(ncol(orderedStations)-50-1):ncol(orderedStations)]
orderedStations[,(ncol(orderedStations)-50):ncol(orderedStations)]
nrows(orderedStations)
nrow(orderedStations)
head(orderedStations)
length(orderedStations)
orderedStations[267]
orderedStations[268]
(201)
(2-1)
yearlyCount
uniqueTotals
table(uniqueTotals$Var1, uniqueTotals$TOTAL)
yealyCount
yearlyCount
library(tidyverse)
pkgTest("tidyverse")
library(tidyverse)
require('tidyverse')
install.packages("tidyverse")

require('tidyverse')
library(knitr)
uniqueTotals
kable(uniqueTotals)
newFrame <- kable(uniqueTotals)
barplot(newFrame, main="Station Deaths",

  col=rainbow(30), las=1, horiz=TRUE,
  legend = rownames(newFrame), beside=TRUE)
as.table(newFrame)
barplot(newFrame)
plot(newFrame)
newFrame
uniqueTotals
install.packages("tidyverse")
install.packages("tidyverse")
library("tidyverse")
yearlyCount
kable(yearlyCount)
library("knitr")
kable(yearlyCount)
yearFrame
yearFrame
uniqueTotals
plot(unique\)
plot(uniqueTotals)
barplot(uniqueTotals)
barplot(uniqueTotals, height=TOTAL)
barplot(uniqueTotals, height=uniqueTotals$TOTAL)
?barplot
as.table(uniqueTotals)
as.table(as.matrix(uniqueTotals))
tabular <- as.table(as.matrix(uniqueTotals))
barplot(tabular)
tabular <- as.table(as.matrix(uniqueTotals$TOTAL))
barplot(tabular)
tabular <- as.table(as.matrix(uniqueTotals))
barplot(tabular)
tabular
table(tabular$Var1, tabular$TOTAL)
tabular <- as.table(as.matrix(uniqueTotals$TOTAL))
barplot(tabular)
uniqueTotals
as.matrix(uniqueTotals)
plot(uniqueTotals)
plot(
  (1:100) ^ 2, 
  xlim = c(-100, 200), 
  ylim = c(2500, 7500),
  main = "plot((1:100) ^ 2, xlim = c(-100, 200), ylim = c(2500, 7500))"
)
plot(
  (1:100) ^ 2, 
  xlim = c(-100, 200), 
  ylim = c(2500, 7500),
  main = "plot((1:100) ^ 2, xlim = c(-100, 200), ylim = c(2500, 7500))"
)
as.table(as.matrix(uniqueTotals))
fetch <- as.table(as.matrix(uniqueTotals))
plot(fetch)
fetch
barplot(fetch)
barplot(fetch$TOTAL)
barplot(fetch)
ls()
uniqueTotals
as.matrix(uniqueTotals)
library(data.table)
dt <- data.table(id=numeric(), begin=numeric(),end=numeric())

dt <- data.table(id=numeric(), begin=numeric(),end=numeric())


dt <- data.table(year=numeric(), total=numeric())
dt
rbind(dt, list(id = 2015, total=629), fill = TRUE)
dt
dt
rbind(dt, list(year = 2015, total=629), fill = TRUE)
dt
barplot(dt)
rbind(dt, list(1, 2))
dt
rbind(dt, list(2, 4))
DT = data.table(
  ID = c("b","b","b","a","a","c"),
  a = 1:6,
  b = 7:12,
  c = 13:18
)
DT
table(DT$ID, DT$a)
uniqueTotals
uniqueTotals[0]
uniqueTotals[,1]
uniqueTotals[1,]
uniqueTotals[,2]
DT = data.table(
  ID = uniqueTotals[,1],
  a = uniqueTotals[,2],
)
DT = data.table(
  ID = uniqueTotals[,1],
  a = uniqueTotals[,2],
)
  b = 7:12,
  c = 13:18

as.integer(uniqueTotals[,2])
value1 <- as.integer(uniqueTotals[,2])
value2 <- as.integer(uniqueTotals[,1])
value1
value2
uniqueTotals[,1]
as.integer(uniqueTotals[,1])
as.character(uniqueTotals[,1])
value2 <- as.character(uniqueTotals[,1])
value2
value1
DT = data.table(Year=value2, Total=value1)
DT
table(DT$Year, DT$Total)
barplot(DT)
DT = data.table(value2, value1)
DT
DT
max.temp <- c(22, 27, 26, 24, 23, 26, 28)
barplot(max.temp)
barplot(max.temp)
# barchart with added parameters
barplot(max.temp,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"),
col = "darkred",
horiz = TRUE)
value1
value2
# barchart with added parameters
barplot(value1,

main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = value2,
col = "darkred",
horiz = TRUE)
# barchart with added parameters
barplot(max.temp,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"),
col = "darkred")
barplot(value1,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = value2,
col = "darkred")
process = FALSE
if (process) {print "sring"}
x <- 5
if(x > 0){
print("Positive number")
}
x <- 5
if(TRUE){

print("Positive number")
}
x <- 5
if(TRUE){
process_total=FALSE
if (process_total) {
print("YES")}
process_total=TRUE
if (process_total) {
print("YES")
}
name = "50"
paste("report/", Name, sep="")
paste("report/", name, sep="")
uniqueTotals
as.integer(uniqueTotals$TOTAL)
as.character(uniqueTotals$TOTAL)
colnames(uniqueTotals)[colnames(uniqueTotals)=="Var1"] <- "Year"
uniqueTotals


as.character(uniqueTotals$Year)
head(fatalities)
date <- "01/01/2015"
quarter(mdy(date), with_year = TRUE)
quarter(mdy(date))
quarter(mdy(date))
quarter(mdy(date), with_year = TRUE)
quarter(mdy(date), with_year = TRUE))
quarter(mdy(date), with_year = TRUE)
